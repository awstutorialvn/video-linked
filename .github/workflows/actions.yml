name: GitHub Actions Linked Video
run-name: ${{ github.actor }} ${{ github.repository }} Actions üöÄ

# runs:
#   using: 'composite'
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v3

#     - name: Setup Node
#       uses: actions/setup-node@v3
#       with:
#         node-version:  16.17.0

#     - name: Cache dependencies
#       id: cache-deps
#       uses: actions/cache@v2
#       with:
#         path: '**/node_modules'
#         key: ${{ runner.os }}-modules-${{ inputs.cache-version }}-${{ hashFiles('**/yarn.lock') }}

#     - name: Install Dependencies
#       # install deps only if lockfile has changed
#       if: steps.cache-deps.outputs.cache-hit != 'true'
#       run: yarn install --force
#       shell: bash
        
on: [push]
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x
          cache: npm

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ inputs.cache-version }}-${{ hashFiles('**/yarn.lock') }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        # install deps only if lockfile has changed
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install --force
        shell: bash

      - name: Lint Check
        run: yarn run lint

      - run: echo "üçè This job's status is ${{ job.status }}."
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: build
        run: yarn run test  